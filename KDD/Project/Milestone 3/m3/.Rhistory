library(gmodels)
library(dplyr)
library(ggmosaic)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(cluster)
library(fpc)
library(data.table)
library(knitr)
library(kableExtra)
library(pylr)
library(ggplot2)
library(tidyverse)
library(gmodels)
library(dplyr)
library(ggmosaic)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(cluster)
library(fpc)
library(data.table)
library(knitr)
library(kableExtra)
library(plyr)
dataset$Month_Numeric <- factor(dataset$Month,
levels = c('Feb', 'Mar', 'May',
'Jun','Jul','Aug','Sep','Oct','Nov','Dec'),
labels = c(2,3,5,6,7,8,9,10,11,12))
dataset$VisitorType_Numeric <- factor(dataset$VisitorType,
levels = c('Returning_Visitor', 'Other', 'New_Visitor'),
labels = c(1,2,3))
View(dataset)
dataset$OperatingSystems <- factor(dataset$OperatingSystems,
order = TRUE,
levels = c(6,3,7,1,5,2,4,8))
dataset$Browser <- factor(dataset$Browser,
order = TRUE,
levels = c(9,3,6,7,1,2,8,11,4,5,10,13,12))
dataset$Region <- factor(dataset$Region,
order = TRUE,
levels = c(8,6,3,4,7,1,5,2,9))
dataset$TrafficType <- factor(dataset$TrafficType,
order = TRUE,
levels = c(12,15,17,18,13,19,3,9,1,6,4,14,11,10,5,2,20,8,7,16))
dataset <- dataset %>%
mutate(Weekend_Binary = ifelse(Weekend == "TRUE",1,0))
install.packages()
rm(list = ls())
library(ggplot2)
library(tidyverse)
library(gmodels)
library(dplyr)
library(ggmosaic)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(cluster)
library(fpc)
library(data.table)
library(knitr)
library(kableExtra)
library(plyr)
dataset <- read.csv("online_shoppers_intention.csv", header = TRUE)
attach(dataset)
ncol(dataset)
nrow(dataset)
str(dataset)
summary(dataset)
tab1 <- read.csv("table1.csv", header = TRUE)
kable(tab1) %>%
kable_styling(full_width = T)
tab2 <- read.csv("table2.csv", header = TRUE)
kable(tab2) %>%
kable_styling(full_width = T)
library(gmodels)
summary(dataset$Revenue)
CrossTable(dataset$Revenue)
dataset <- dataset %>%
mutate(Revenue_binary = ifelse(dataset$Revenue == "TRUE", 1, 0))
colSums(is.na(dataset))
dataset$Month = factor(dataset$Month, levels = month.abb)
dataset %>%
ggplot() +
aes(x = Month, Revenue = ..count../nrow(dataset), fill = Revenue) +
geom_bar() +
ylab("Frequency")
table_month = table(dataset$Month, dataset$Revenue)
tab_mon =  as.data.frame(prop.table(table_month,2))
colnames(tab_mon) = c("Month", "Revenue", "perc")
ggplot(data = tab_mon, aes(x = Month, y = perc, fill = Revenue)) +
geom_bar(stat = 'identity', position = 'dodge', alpha = 2/3) +
xlab("Month")+
ylab("Percent")
theme_set(theme_bw())
## setting default parameters for mosaic plots
mosaic_theme = theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.5),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
dataset %>%
ggplot() +
geom_mosaic(aes(x = product(Revenue, VisitorType), fill = Revenue)) +
mosaic_theme +
xlab("Visitor Type") +
ylab(NULL)
CrossTable(dataset$Weekend, dataset$Revenue)
dataset %>%
ggplot() +
mosaic_theme +
geom_mosaic(aes(x = product(Revenue,Weekend), fill = Revenue)) +
xlab("Weekend") +
ylab(NULL)
dataset$OperatingSystems <- factor(dataset$OperatingSystems,
order = TRUE,
levels = c(6,3,7,1,5,2,4,8))
dataset$Browser <- factor(dataset$Browser,
order = TRUE,
levels = c(9,3,6,7,1,2,8,11,4,5,10,13,12))
dataset$Region <- factor(dataset$Region,
order = TRUE,
levels = c(8,6,3,4,7,1,5,2,9))
dataset$TrafficType <- factor(dataset$TrafficType,
order = TRUE,
levels = c(12,15,17,18,13,19,3,9,1,6,4,14,11,10,5,2,20,8,7,16))
dataset$Month_Numeric <- factor(dataset$Month,
levels = c('Feb', 'Mar', 'May',
'Jun','Jul','Aug','Sep','Oct','Nov','Dec'),
labels = c(2,3,5,6,7,8,9,10,11,12))
dataset$VisitorType_Numeric <- factor(dataset$VisitorType,
levels = c('Returning_Visitor', 'Other', 'New_Visitor'),
labels = c(1,2,3))
dataset <- dataset %>%
mutate(Weekend_Binary = ifelse(Weekend == "TRUE",1,0))
library(ggplot2)
library(tidyverse)
library(gmodels)
library(dplyr)
library(ggmosaic)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(cluster)
library(fpc)
library(data.table)
library(knitr)
library(kableExtra)
library(plyr)
library(caTools)
dataset_classify = dataset[-c(19:22)]
set.seed(123)
split = sample.split(dataset$Revenue, SplitRatio = 0.8)
training_data = subset(dataset, split == TRUE)
test_data = subset(dataset, split == FALSE)
rm(list = ls())
library(ggplot2)
library(tidyverse)
library(gmodels)
library(dplyr)
library(ggmosaic)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(cluster)
library(fpc)
library(data.table)
library(knitr)
library(kableExtra)
library(plyr)
library(caTools)
dataset <- read.csv("online_shoppers_intention.csv", header = TRUE)
attach(dataset)
ncol(dataset)
nrow(dataset)
str(dataset)
summary(dataset)
tab1 <- read.csv("table1.csv", header = TRUE)
kable(tab1) %>%
kable_styling(full_width = T)
tab2 <- read.csv("table2.csv", header = TRUE)
kable(tab2) %>%
kable_styling(full_width = T)
library(gmodels)
summary(dataset$Revenue)
CrossTable(dataset$Revenue)
dataset <- dataset %>%
mutate(Revenue_binary = ifelse(dataset$Revenue == "TRUE", 1, 0))
colSums(is.na(dataset))
dataset$Month = factor(dataset$Month, levels = month.abb)
dataset %>%
ggplot() +
aes(x = Month, Revenue = ..count../nrow(dataset), fill = Revenue) +
geom_bar() +
ylab("Frequency")
table_month = table(dataset$Month, dataset$Revenue)
tab_mon =  as.data.frame(prop.table(table_month,2))
colnames(tab_mon) = c("Month", "Revenue", "perc")
ggplot(data = tab_mon, aes(x = Month, y = perc, fill = Revenue)) +
geom_bar(stat = 'identity', position = 'dodge', alpha = 2/3) +
xlab("Month")+
ylab("Percent")
theme_set(theme_bw())
## setting default parameters for mosaic plots
mosaic_theme = theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.5),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
dataset %>%
ggplot() +
geom_mosaic(aes(x = product(Revenue, VisitorType), fill = Revenue)) +
mosaic_theme +
xlab("Visitor Type") +
ylab(NULL)
CrossTable(dataset$Weekend, dataset$Revenue)
dataset %>%
ggplot() +
mosaic_theme +
geom_mosaic(aes(x = product(Revenue,Weekend), fill = Revenue)) +
xlab("Weekend") +
ylab(NULL)
dataset$OperatingSystems <- factor(dataset$OperatingSystems,
order = TRUE,
levels = c(6,3,7,1,5,2,4,8))
dataset$Browser <- factor(dataset$Browser,
order = TRUE,
levels = c(9,3,6,7,1,2,8,11,4,5,10,13,12))
dataset$Region <- factor(dataset$Region,
order = TRUE,
levels = c(8,6,3,4,7,1,5,2,9))
dataset$TrafficType <- factor(dataset$TrafficType,
order = TRUE,
levels = c(12,15,17,18,13,19,3,9,1,6,4,14,11,10,5,2,20,8,7,16))
dataset$Month_Numeric <- factor(dataset$Month,
levels = c('Feb', 'Mar', 'May',
'Jun','Jul','Aug','Sep','Oct','Nov','Dec'),
labels = c(2,3,5,6,7,8,9,10,11,12))
dataset$VisitorType_Numeric <- factor(dataset$VisitorType,
levels = c('Returning_Visitor', 'Other', 'New_Visitor'),
labels = c(1,2,3))
dataset <- dataset %>%
mutate(Weekend_Binary = ifelse(Weekend == "TRUE",1,0))
dataset_classify = dataset[-c(19:22)]
set.seed(123)
split = sample.split(dataset_classify$Revenue, SplitRatio = 0.8)
training_data = subset(dataset_classify, split == TRUE)
test_data = subset(dataset_classify, split == FALSE)
help("scale")
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
dataset_norm <- dataset
## Normalizing our 10 variables.
dataset_norm$Administrative <- normalize(dataset$Administrative)
dataset_norm$Administrative_Duration <- normalize(dataset$Administrative_Duration)
dataset_norm$Informational <- normalize(dataset$Informational_Duration)
dataset_norm$Informational_Duration <- normalize(dataset$Administrative)
dataset_norm$ProductRelated <- normalize(dataset$ProductRelated)
dataset_norm$ProductRelated_Duration <- normalize(dataset$ProductRelated_Duration)
dataset_norm$BounceRates <- normalize(dataset$BounceRates)
dataset_norm$ExitRates <- normalize(dataset$ExitRates)
dataset_norm$PageValues <- normalize(dataset$PageValues)
dataset_norm$SpecialDay <- normalize(dataset$SpecialDay)
dataset_knn <- dataset_norm[-c(11,16:19)]
View(dataset_knn)
View(dataset)
View(dataset_norm)
model_dt<- rpart(Revenue ~ . , data = training_data, method="class")
rpart.plot(model_dt)
model_dt<- rpart(Revenue ~ . , data = training_data, method="class")
rpart.plot(model_dt)
pred.train.dt <- predict(model_dt,test_data,type = "class")
mean(pred.train.dt==test_data$Revenue)
model_dt<- rpart(Revenue ~ . , data = training_data, method="class")
rpart.plot(model_dt)
pred.train.dt <- predict(model_dt,test_data,type = "class")
mean(pred.train.dt==test_data$Revenue)
t2<-table(pred.train.dt,test_data$Revenue)
presicion_dt<- t2[1,1]/(sum(t2[1,]))
recall_dt<- t2[1,1]/(sum(t2[,1]))
precision_dt
model_dt<- rpart(Revenue ~ . , data = training_data, method="class")
rpart.plot(model_dt)
pred.train.dt <- predict(model_dt,test_data,type = "class")
mean(pred.train.dt==test_data$Revenue)
t2<-table(pred.train.dt,test_data$Revenue)
presicion_dt<- t2[1,1]/(sum(t2[1,]))
recall_dt<- t2[1,1]/(sum(t2[,1]))
precicion_dt
model_dt<- rpart(Revenue ~ . , data = training_data, method="class")
rpart.plot(model_dt)
pred.train.dt <- predict(model_dt,test_data,type = "class")
mean(pred.train.dt==test_data$Revenue)
t2<-table(pred.train.dt,test_data$Revenue)
presicion_dt<- t2[1,1]/(sum(t2[1,]))
recall_dt<- t2[1,1]/(sum(t2[,1]))
presicion_dt
rm(list = ls())
library(ggplot2)
library(tidyverse)
library(gmodels)
library(dplyr)
library(ggmosaic)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(cluster)
library(fpc)
library(data.table)
library(knitr)
library(kableExtra)
library(plyr)
library(caTools)
dataset <- read.csv("online_shoppers_intention.csv", header = TRUE)
attach(dataset)
ncol(dataset)
nrow(dataset)
str(dataset)
summary(dataset)
tab1 <- read.csv("table1.csv", header = TRUE)
kable(tab1) %>%
kable_styling(full_width = T)
tab2 <- read.csv("table2.csv", header = TRUE)
kable(tab2) %>%
kable_styling(full_width = T)
library(gmodels)
summary(dataset$Revenue)
CrossTable(dataset$Revenue)
dataset <- dataset %>%
mutate(Revenue_binary = ifelse(dataset$Revenue == "TRUE", 1, 0))
colSums(is.na(dataset))
dataset$Month = factor(dataset$Month, levels = month.abb)
dataset %>%
ggplot() +
aes(x = Month, Revenue = ..count../nrow(dataset), fill = Revenue) +
geom_bar() +
ylab("Frequency")
table_month = table(dataset$Month, dataset$Revenue)
tab_mon =  as.data.frame(prop.table(table_month,2))
colnames(tab_mon) = c("Month", "Revenue", "perc")
ggplot(data = tab_mon, aes(x = Month, y = perc, fill = Revenue)) +
geom_bar(stat = 'identity', position = 'dodge', alpha = 2/3) +
xlab("Month")+
ylab("Percent")
theme_set(theme_bw())
## setting default parameters for mosaic plots
mosaic_theme = theme(axis.text.x = element_text(angle = 90,
hjust = 1,
vjust = 0.5),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
dataset %>%
ggplot() +
geom_mosaic(aes(x = product(Revenue, VisitorType), fill = Revenue)) +
mosaic_theme +
xlab("Visitor Type") +
ylab(NULL)
CrossTable(dataset$Weekend, dataset$Revenue)
dataset %>%
ggplot() +
mosaic_theme +
geom_mosaic(aes(x = product(Revenue,Weekend), fill = Revenue)) +
xlab("Weekend") +
ylab(NULL)
dataset_classify = dataset[-c(19:22)]
set.seed(123)
split = sample.split(dataset_classify$Revenue, SplitRatio = 0.8)
training_data = subset(dataset_classify, split == TRUE)
test_data = subset(dataset_classify, split == FALSE)
dt_model<- rpart(Revenue ~ . , data = training_data, method="class")
rpart.plot(dt_model)
dt.pred <- predict(dt_model,test_data,type = "class")
mean(dt.pred==test_data$Revenue)
t2<-table(dt.pred,test_data$Revenue)
t2
cfdt<-table(dt.pred,test_data$Revenue)
cfdt
dt_precision<- cfdt[1,1]/(sum(cfdt[1,]))
dt_recall<- cfdt[1,1]/(sum(cfdt[,1]))
dt_precision
dt_recall
dt_precision<- cfdt[1,1]/(sum(cfdt[1,]))
dt_recall<- cfdt[1,1]/(sum(cfdt[,1]))
dt_fscore <- 2*dt_precision*dt_recall/(dt_precision+dt_recall)
dt_precision
dt_recall
dt_fscore
View(dataset_classify)
View(dataset)
dataset_knn <- dataset[1:17,19]
# dataset_knn$OperatingSystems <- factor(dataset$OperatingSystems,
#                                    order = TRUE,
#                                    levels = c(6,3,7,1,5,2,4,8))
# dataset_knn$Browser <- factor(dataset$Browser,
#                           order = TRUE,
#                           levels = c(9,3,6,7,1,2,8,11,4,5,10,13,12))
# dataset_knn$Region <- factor(dataset$Region,
#                          order = TRUE,
#                          levels = c(8,6,3,4,7,1,5,2,9))
# dataset_knn$TrafficType <- factor(dataset$TrafficType,
#                               order = TRUE,
#                               levels = c(12,15,17,18,13,19,3,9,1,6,4,14,11,10,5,2,20,8,7,16))
# dataset_knn$Month <- factor(dataset$Month,
#                         levels = c('Feb', 'Mar', 'May',
#                                    'Jun','Jul','Aug','Sep','Oct','Nov','Dec'),
#                         labels = c(2,3,5,6,7,8,9,10,11,12))
# dataset_knn$VisitorType<- factor(dataset$VisitorType,
#                                       levels = c('Returning_Visitor', 'Other', 'New_Visitor'),
#                                       labels = c(1,2,3))
dataset_knn <- dataset[c(1:17,19)]
# dataset_knn$OperatingSystems <- factor(dataset$OperatingSystems,
#                                    order = TRUE,
#                                    levels = c(6,3,7,1,5,2,4,8))
# dataset_knn$Browser <- factor(dataset$Browser,
#                           order = TRUE,
#                           levels = c(9,3,6,7,1,2,8,11,4,5,10,13,12))
# dataset_knn$Region <- factor(dataset$Region,
#                          order = TRUE,
#                          levels = c(8,6,3,4,7,1,5,2,9))
# dataset_knn$TrafficType <- factor(dataset$TrafficType,
#                               order = TRUE,
#                               levels = c(12,15,17,18,13,19,3,9,1,6,4,14,11,10,5,2,20,8,7,16))
# dataset_knn$Month <- factor(dataset$Month,
#                         levels = c('Feb', 'Mar', 'May',
#                                    'Jun','Jul','Aug','Sep','Oct','Nov','Dec'),
#                         labels = c(2,3,5,6,7,8,9,10,11,12))
# dataset_knn$VisitorType<- factor(dataset$VisitorType,
#                                       levels = c('Returning_Visitor', 'Other', 'New_Visitor'),
#                                       labels = c(1,2,3))
View(dataset_knn)
View(dataset_knn)
dataset_knn <- dataset[c(1:17,19)]
dataset_knn$OperatingSystems <- factor(dataset$OperatingSystems,
order = TRUE,
levels = c(6,3,7,1,5,2,4,8))
dataset_knn$Browser <- factor(dataset$Browser,
order = TRUE,
levels = c(9,3,6,7,1,2,8,11,4,5,10,13,12))
dataset_knn$Region <- factor(dataset$Region,
order = TRUE,
levels = c(8,6,3,4,7,1,5,2,9))
dataset_knn$TrafficType <- factor(dataset$TrafficType,
order = TRUE,
levels = c(12,15,17,18,13,19,3,9,1,6,4,14,11,10,5,2,20,8,7,16))
dataset_knn$Month <- factor(dataset$Month,
levels = c('Feb', 'Mar', 'May',
'Jun','Jul','Aug','Sep','Oct','Nov','Dec'),
labels = c(2,3,5,6,7,8,9,10,11,12))
dataset_knn$VisitorType<- factor(dataset$VisitorType,
levels = c('Returning_Visitor', 'Other', 'New_Visitor'),
labels = c(1,2,3))
dataset_knn$Weekend <- factor(dataset$Weekend,
levels = c('True','False'),
labels = c(1,2))
dataset_knn <- dataset[c(1:17,19)]
dataset_knn$OperatingSystems <- factor(dataset$OperatingSystems,
order = TRUE,
levels = c(6,3,7,1,5,2,4,8))
dataset_knn$Browser <- factor(dataset$Browser,
order = TRUE,
levels = c(9,3,6,7,1,2,8,11,4,5,10,13,12))
dataset_knn$Region <- factor(dataset$Region,
order = TRUE,
levels = c(8,6,3,4,7,1,5,2,9))
dataset_knn$TrafficType <- factor(dataset$TrafficType,
order = TRUE,
levels = c(12,15,17,18,13,19,3,9,1,6,4,14,11,10,5,2,20,8,7,16))
dataset_knn$Month <- factor(dataset$Month,
levels = c('Feb', 'Mar', 'May',
'Jun','Jul','Aug','Sep','Oct','Nov','Dec'),
labels = c(2,3,5,6,7,8,9,10,11,12))
dataset_knn$VisitorType<- factor(dataset$VisitorType,
levels = c('Returning_Visitor', 'Other', 'New_Visitor'),
labels = c(1,2,3))
dataset_knn$Weekend <- factor(dataset$Weekend,
levels = c('TRUE','FALSE'),
labels = c(1,0))
set.seed(1233)
splitknn = sample.split(dataset_knn$Revenue, SplitRatio = 0.8)
training_data_knn = subset(dataset_knn, split == TRUE)
test_data_knn = subset(dataset_knn, split == FALSE)
training_set_knn[-18] = scale(training_set_knn[-18])
training_data_knn[-18] = scale(training_data_knn[-18])
View(test_data_knn)
set.seed(1233)
splitknn = sample.split(dataset_knn$Revenue_binary, SplitRatio = 0.8)
training_data_knn = subset(dataset_knn, split == TRUE)
test_data_knn = subset(dataset_knn, split == FALSE)
training_data_knn[-18] = scale(training_data_knn[-18])
library(class)
y_pred = knn(train = training_data_knn[, -18],
test = test_data_knn[, -18],
cl = training_data_knn[, 18],
k = 5,
prob = TRUE)
cm = table(test_data_knn[, 18], y_pred)
cm = table(test_data_knn[, 18], y_pred)
cm
knn_precision<- cm[1,1]/(sum(cm[1,]))
knn_recall<- cm[1,1]/(sum(cm[,1]))
knn_fscore <- 2*knn_precision*knn_recall/(knn_precision+knn_recall)
knn_precision
knn_recall
knn_fscore
