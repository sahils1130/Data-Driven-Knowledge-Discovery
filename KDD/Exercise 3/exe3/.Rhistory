knitr::opts_chunk$set(echo = TRUE)
require(ISLR)
data(Auto)
attach(Auto)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
myAuto = data.frame(Auto, mpg01)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
myAuto = data.frame(Auto, mpg01)
summary(myAuto)
pairs(myAuto)
sapply(myAuto, class)
cor(myAuto[-9])
par(mfrow = c(2,2))
boxplot(mpg01, cylinders, xlab = "mpg efficiency", ylab = "cyclinders")
boxplot(mpg01, displacement, xlab = "mpg efficiency", ylab = "displacement")
boxplot(mpg01, horsepower, xlab = "mpg efficiency", ylab = "horsepower")
boxplot(mpg01, weight, xlab = "mpg efficiency", ylab = "weight")
par(mfrow = c(1,1))
pairs(myAuto)
sapply(myAuto, class)
cor(myAuto[-9])
par(mfrow = c(2,2))
boxplot(mpg01, cylinders, main = "Cylinders Vs mpg01",
xlab = "mpg efficiency", ylab = "cyclinders")
boxplot(mpg01, displacement, main = "displacement Vs mpg01",
xlab = "mpg efficiency", ylab = "displacement")
boxplot(mpg01, horsepower, main = "horsepower Vs mpg01",
xlab = "mpg efficiency", ylab = "horsepower")
boxplot(mpg01, weight, main = "weight Vs mpg01",
xlab = "mpg efficiency", ylab = "weight")
par(mfrow = c(1,1))
pairs(myAuto)
sapply(myAuto, class)
cor(myAuto[-9])
par(mfrow = c(2,2))
boxplot(mpg01, cylinders, main = "cylinders Vs mpg01",
xlab = "mpg efficiency", ylab = "cyclinders")
boxplot(mpg01, displacement, main = "displacement Vs mpg01",
xlab = "mpg efficiency", ylab = "displacement")
boxplot(mpg01, horsepower, main = "horsepower Vs mpg01",
xlab = "mpg efficiency", ylab = "horsepower")
boxplot(mpg01, weight, main = "weight Vs mpg01",
xlab = "mpg efficiency", ylab = "weight")
par(mfrow = c(1,1))
pairs(myAuto)
#sapply(myAuto, class)
cor(myAuto[-9])
par(mfrow = c(2,2))
boxplot(mpg01, cylinders, main = "cylinders Vs mpg01",
xlab = "mpg efficiency", ylab = "cyclinders")
boxplot(mpg01, displacement, main = "displacement Vs mpg01",
xlab = "mpg efficiency", ylab = "displacement")
boxplot(mpg01, horsepower, main = "horsepower Vs mpg01",
xlab = "mpg efficiency", ylab = "horsepower")
boxplot(mpg01, weight, main = "weight Vs mpg01",
xlab = "mpg efficiency", ylab = "weight")
par(mfrow = c(1,1))
pairs(myAuto)
sapply(myAuto, class)
cor(myAuto[-9])
par(mfrow = c(2,2))
boxplot(mpg01, cylinders, main = "cylinders Vs mpg01",
xlab = "mpg efficiency", ylab = "cyclinders")
boxplot(mpg01, displacement, main = "displacement Vs mpg01",
xlab = "mpg efficiency", ylab = "displacement")
boxplot(mpg01, horsepower, main = "horsepower Vs mpg01",
xlab = "mpg efficiency", ylab = "horsepower")
boxplot(mpg01, weight, main = "weight Vs mpg01",
xlab = "mpg efficiency", ylab = "weight")
par(mfrow = c(1,1))
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.7 , replace=F)  # 70% train, 30% test
train <- myAuto[splitratio,]
test <- myAuto[-splitratio,]
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.7 , replace=F) # 70% train, 30% test
train <- myAuto[splitratio,]
test <- myAuto[-splitratio,]
mpg01.test <- mpg01[-splitratio]
dim(train)
dim(test)
dim(mpg01.test)
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = train)
lda.fit
fit.lda.pred <- predict(fit.lda, test)$class
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = train)
lda.fit
lda.fit.pred <- predict(lda.fit, test)$class
table(lda.fit.pred, test$mpg01)
mean(lda.fit.pred != test$mpg01)
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.8 , replace=F) # 80% train, 20% test
train <- myAuto[splitratio,]
test <- myAuto[-splitratio,]
mpg01.test <- mpg01[-splitratio]
dim(train)
dim(test)
dim(mpg01.test)
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = train)
lda.fit
lda.fit.pred <- predict(lda.fit, test)$class
table(lda.fit.pred, test$mpg01)
mean(lda.fit.pred != test$mpg01)
mean(lda.fit.pred != test$mpg01)*100
mean(lda.fit.pred != test$mpg01)
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.8 , replace=F) # 75% train, 25% test
train <- myAuto[splitratio,]
test <- myAuto[-splitratio,]
mpg01.test <- mpg01[-splitratio]
dim(train)
dim(test)
dim(mpg01.test)
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = train)
lda.fit
lda.fit.pred <- predict(lda.fit, test)$class
table(lda.fit.pred, test$mpg01)
mean(lda.fit.pred != test$mpg01)
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.75 , replace=F) # 75% train, 25% test
train <- myAuto[splitratio,]
test <- myAuto[-splitratio,]
mpg01.test <- mpg01[-splitratio]
dim(train)
dim(test)
dim(mpg01.test)
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = train)
lda.fit
lda.fit.pred <- predict(lda.fit, test)$class
table(lda.fit.pred, test$mpg01)
mean(lda.fit.pred != test$mpg01)
qda.fit <- qda(mpg01 ~ cylinders + weight + displacement + horsepower, subset = train)
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.75 , replace=F) # 75% train, 25% test
Auto.train <- myAuto[splitratio,]
Auto.test <- myAuto[-splitratio,]
mpg01.test <- mpg01[-splitratio]
dim(Auto.train)
dim(Auto.test)
dim(mpg01.test)
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto.train)
lda.fit
lda.fit.pred <- predict(lda.fit, Auto.test)$class
table(lda.fit.pred, Auto.test$mpg01)
mean(lda.fit.pred != Auto.test$mpg01)
qda.fit <- qda(mpg01 ~ cylinders + weight + displacement + horsepower, subset = Auto.train)
qda.fit <- qda(mpg01 ~ cylinders + weight + displacement + horsepower, subset = Auto.train)
qda.fit <- qda(mpg01 ~ cylinders + weight + displacement + horsepower, subset = train)
fit.qda <- qda(mpg01~displacement+horsepower+weight+acceleration, data=train)
fit.qda.pred <- predict(fit.qda, test)$class
table(fit.qda.pred, test$mpg01)
mean(fit.qda.pred != test$mpg01)
fit.qda <- qda(mpg01~cylinders + weight + displacement + horsepower, data=train)
fit.qda.pred <- predict(fit.qda, test)$class
table(fit.qda.pred, test$mpg01)
mean(fit.qda.pred != test$mpg01)
fit.qda <- qda(mpg01~cylinders + weight + displacement + horsepower, data=Auto.train)
fit.qda.pred <- predict(fit.qda, Auto.test)$class
table(fit.qda.pred, Auto.test$mpg01)
mean(fit.qda.pred != Auto.test$mpg01)
mean(fit.qda.pred != Auto.test$mpg01)
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.8 , replace=F) # 80% train, 20% test
Auto.train <- myAuto[splitratio,]
Auto.test <- myAuto[-splitratio,]
mpg01.test <- mpg01[-splitratio]
dim(Auto.train)
dim(Auto.test)
dim(mpg01.test)
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto.train)
lda.fit
lda.fit.pred <- predict(lda.fit, Auto.test)$class
table(lda.fit.pred, Auto.test$mpg01)
mean(lda.fit.pred != Auto.test$mpg01)
set.seed(123)
splitratio <- sample(1:nrow(myAuto), nrow(myAuto)*0.75 , replace=F) # 75% train, 25% test
Auto.train <- myAuto[splitratio,]
Auto.test <- myAuto[-splitratio,]
mpg01.test <- mpg01[-splitratio]
dim(Auto.train)
dim(Auto.test)
dim(mpg01.test)
library(MASS)
lda.fit <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto.train)
lda.fit
lda.fit.pred <- predict(lda.fit, Auto.test)$class
table(lda.fit.pred, Auto.test$mpg01)
mean(lda.fit.pred != Auto.test$mpg01)
fit.qda <- qda(mpg01~cylinders + weight + displacement + horsepower, data=Auto.train)
fit.qda.pred <- predict(fit.qda, Auto.test)$class
table(fit.qda.pred, Auto.test$mpg01)
mean(fit.qda.pred != Auto.test$mpg01)
fit.logit <- glm(mpg01~cylinders+displacement+horsepower+weight, data=Auto.train,
family=binomial)
logit.prob <- predict(fit.logit, Auto.test, type="response")
logit.pred <- ifelse(logit.prob > 0.5, 1, 0)
table(logit.pred, Auto.test$mpg01)
mean(logit.pred != Auto.test$mpg01)
library(class)
set.seed(1)
train.X = cbind(cylinders, displacement, horsepower, weight)[Auto.train, ]
library(class)
train.X = cbind(cylinders, weight, displacement, horsepower)[Auto.train, ]
train.X <- cbind(Auto.train$cylinders, Auto.train$displacement, Auto.train$weight,
Auto.train$horsepower)
test.X <- cbind(Auto.test$cylinders, Auto.test$displacement, Auto.test$weight,
Auto.test$horsepower)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=1)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
# knn.pred <- knn(train.X, test.X, train$mpg01, k=10)
# table(knn.pred, test$mpg01)
# mean(knn.pred != test$mpg01)
# knn.pred <- knn(train.X, test.X, train$mpg01, k=20)
# table(knn.pred, test$mpg01)
# mean(knn.pred != test$mpg01)
# knn.pred <- knn(train.X, test.X, train$mpg01, k=30)
# table(knn.pred, test$mpg01)
# mean(knn.pred != test$mpg01)
# knn.pred <- knn(train.X, test.X, train$mpg01, k=50)
# table(knn.pred, test$mpg01)
# mean(knn.pred != test$mpg01)
# knn.pred <- knn(train.X, test.X, train$mpg01, k=100)
# table(knn.pred, test$mpg01)
# mean(knn.pred != test$mpg01)
# knn.pred <- knn(train.X, test.X, train$mpg01, k=200)
# table(knn.pred, test$mpg01)
# mean(knn.pred != test$mpg01)
train.X <- cbind(Auto.train$cylinders, Auto.train$displacement, Auto.train$weight,
Auto.train$horsepower)
test.X <- cbind(Auto.test$cylinders, Auto.test$displacement, Auto.test$weight,
Auto.test$horsepower)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=1)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=10)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=20)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=30)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=50)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=100)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
knn.pred <- knn(train.X, test.X, Auto.train$mpg01, k=200)
table(knn.pred, Auto.test$mpg01)
mean(knn.pred != Auto.test$mpg01)
rm(list = ls())
install.packages("class")
