require(ISLR)
data(Auto)
install.packages("ISLR")
require(ISLR)
data(Auto)
str(Auto)
data.frame(Auto)
View(Auto)
data.frame(a)
a <- data(Auto)
data.frame(a)
data.frame(a)
data(Auto)
data.frame(Auto)
Auto <- na.omit(Auto)
data.frame(Auto)
nrow(Auto)
head(Auto)
ncol(Auto)
cylinders <- as.factor(cylinders)
cylinders <- as.factor(Auto$cylinders)
head(Auto)
str(Auto)
View(Auto)
Auto <- na.omit(Auto)
nrow(Auto)
head(Auto)
ncol(Auto)
colnames(Auto)
attach(Auto)
cylinders <- as.factor(cylinders)
summary(Auto)
# (b) What is the range of each quantitative predictor? You can answer this using the range() function.
# range()
range(mpg)
# (b) What is the range of each quantitative predictor? You can answer this using the range() function.
# range()
range(Auto)
# (b) What is the range of each quantitative predictor? You can answer this using the range() function.
# range()
range(mpg)
sapply(Auto[,c(1,3:7)], range)
sapply(Auto[,c(1,3:8)], range)
sapply(Auto[,c(1,3:7)], range)
# (c) What is the mean and standard deviation of each quantitative
# predictor?
sapply(Auto[,c(1,3:7)], mean)
# (c) What is the mean and standard deviation of each quantitative
# predictor?
sapply(Auto[,c(1,3:7)], mean, std)
sapply(Auto[,c(1,3:7)], std)
std(mpg)
sapply(Auto[,c(1,3:7)], sd)
as.data.frame(t(sapply(Auto[,c(1,3:7)], function(test) list(Means = mean(test), sds = sd(test),
ranges = range(test)))))
# (d) Now remove the 10th through 85th observations. What is the
# range, mean, and standard deviation of each predictor in the
# subset of the data that remains?
as.data.frame(t(sapply(Auto[-10:-85,c(1,3:7)], function(test) list(Means = mean(test), sds = sd(test),
ranges = range(test)))))
# (e) Using the full data set, investigate the predictors graphically,
# using scatterplots or other tools of your choice. Create some plots
# highlighting the relationships among the predictors. Comment
# on your findings.
pairs(Auto)
plot(displacement, horsepower)
plot(mpg,weight)
data(College)
ls()
rm(list = ls())
data(College)
data(Auto)
install.packages("ISLR")
data(College)
data(Auto)
require(ISLR)
data(College)
data.frame(College)
head(College)
View(College)
attach(College)
# Before reading the data into R, it can be viewed in Excel or a text
# editor.
getwd()
# (a) Use the read.csv() function to read the data into R. Call the
# loaded data college. Make sure that you have the directory set
# to the correct location for the data.
College <- read.csv("College.csv", Header = T, na.strings = "?")
# (a) Use the read.csv() function to read the data into R. Call the
# loaded data college. Make sure that you have the directory set
# to the correct location for the data.
College <- read.csv("College.csv", header = T, na.strings = "?")
View(College)
rownames ( College )= College [,1]
fix(College)
fix(College)
# You should see that there is now a row.names column with the
# name of each university recorded. This means that R has given
# each row a name corresponding to the appropriate university. R
# will not try to perform calculations on the row names. However,
# we still need to eliminate the first column in the data where the
# names are stored. Try
# > college = college [,-1]
# > fix ( college )
College = College [,-1]
College = College [,-1]
fix ( College )
# (c) i. Use the summary() function to produce a numerical summary
# of the variables in the data set.
summary(College)
# ii. Use the pairs() function to produce a scatterplot matrix of
# the first ten columns or variables of the data. Recall that
# you can reference the first ten columns of a matrix A using
# A[,1:10].
pairs(College[,1:10])
# iii. Use the plot() function to produce side-by-side boxplots of
# Outstate versus Private.
head(College)
plot(Outstate, Private)
# iii. Use the plot() function to produce side-by-side boxplots of
# Outstate versus Private.
attach(College)
plot(Outstate, Private)
View(College)
rownames ( College )= College [,1]
fix(College)
College = College [,-1]
fix ( College )
fix ( College )
fix ( College )
fix ( College )
rownames ( College )= College [,1]
fix(College)
College <- read.csv("College.csv", header = T, na.strings = "?")
plot(Outstate, Private)
remove(list = ls())
College <- read.csv("College.csv", header = T, na.strings = "?")
View(College)
# iii. Use the plot() function to produce side-by-side boxplots of
# Outstate versus Private.
attach(College)
plot(Outstate, Private)
plot(Outstate, Private, data(College), xlab = "Outstate", ylab = "Private")
plot(Outstate, Private, data=College, xlab = "Outstate", ylab = "Private")
plot(Outstate, Private, data=College, xlab = "Private", ylab = "Outstate")
# the Top10perc variable. We are going to divide universities
# into two groups based on whether or not the proportion
# of students coming from the top 10 % of their high school
# classes exceeds 50 %.
# > Elite =rep (" No", nrow( college ))
# > Elite [ college$Top10perc >50]=" Yes "
# > Elite =as. factor ( Elite )
# > college = data. frame (college , Elite )
# Use the summary() function to see how many elite universities there are. Now use the plot() function to produce
# side-by-side boxplots of Outstate versus Elite.
Elite = rep("No", nrow(College))
Elite[Top10perc>50] = "Yes"
Elite
Elite = as.factor(Elite)
College = data.frame(College, Elite)
View(College)
summary(College)
summary(College)
plot(Outstate, Elite, data=College, xlab = "Elite", ylab = "Outstate")
plot(Outstate, Elite, xlab = "Elite", ylab = "Outstate")
plot(Outstate~Elite, xlab = "Elite", ylab = "Outstate")
plot(Outstate~Private, data=College, xlab = "Private", ylab = "Outstate")
par(mfrow=c(2,2))
hist(Apps)
hist(Enroll)
hist(Expand)
hist(Expend)
hist(Outstate)
hist(Apps, breaks=50, xlim=c(0,25000), main="Apps")
hist(Enroll, breaks = 25, main = Enroll)
hist(Enroll, breaks = 25, main = "Enroll")
hist(Outstate. breaks = 25, main = "Outstate")
hist(Outstate, breaks = 25, main = "Outstate")
hist(Apps, breaks=50, xlim=c(0,25000), main="Apps")
hist(Enroll, breaks = 25, main = "Enroll")
hist(Expend, breaks = 25, main = "Enroll")
hist(Outstate, breaks = 25, main = "Outstate")
# vi. Continue exploring the data, and provide a brief summary
# of what you discover.
summary(College)
install.packages("rmarkdown")
getwd()
knitr::opts_chunk$set(echo = TRUE)
getwd()
college <- read.csv("College.csv")
#fix(college)
rownames ( college )= college [,1]
college = college [,-1]
fix ( college )
install.packages("kableExtra")
library(knitr)
library(kableExtra)
kableExtra(head(college), format = "latex", booktabs=T) %>%
kable_styling(latex_options="scale_down")
library(knitr)
library(kableExtra)
kable(head(college), format = "latex", booktabs=T) %>%
kable_styling(latex_options="scale_down")
library(knitr)
library(kableExtra)
kable(head(college), format = "latex", booktabs=T) %>%
kable_styling(latex_options="scale_down")
# library(knitr)
# library(kableExtra)
# kable(head(college), format = "latex", booktabs=T) %>%
#   kable_styling(latex_options="scale_down")
head(college)
install.packages("latexpdf")
install.packages("knitLatex")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
kable(head(college), format = "latex", booktabs=T) %>%
kable_styling(latex_options="scale_down")
# head(college)
# library()
install.packages("tinytex")
library(knitr)
library(kableExtra)
kable(head(college), format = "latex", booktabs=T) %>%
kable_styling(latex_options="scale_down")
# head(college)
# library()
install.packages("latex2exp")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
kable(head(college), format = "latex", booktabs=T) %>%
kable_styling(latex_options="scale_down")
# head(college)
# library()
knitr::opts_chunk$set(echo = TRUE)
summary(college)
attach(college)
plot(Outstate~Private, data=College, xlab = "Private", ylab = "Outstate")
Elite = rep("No", nrow(college))
Elite[Top10perc>50] = "Yes"
#Elite
Elite = as.factor(Elite)
college = data.frame(college, Elite)
summary(college)
plot(Outstate~Elite, xlab = "Elite", ylab = "Outstate")
par(mfrow=c(2,2))
hist(Apps, breaks=50, xlim=c(0,25000), main="Apps")
hist(Enroll, breaks = 25, main = "Enroll")
hist(Expend, breaks = 25, main = "Expend")
hist(Outstate, breaks = 25, main = "Outstate")
plot(Private~Elite, data=college, xlab = "ELite", ylab = "Private")
table(Private~Elite, data=college, xlab = "ELite", ylab = "Private")
table(Private, Elite)
install.packages("gmodels")
table(Private, Elite)
library(gmodels)
CrossTable(Private, Elite)
knitr::opts_chunk$set(echo = TRUE)
pairs(college[enrollment~undergrad])
pairs(college[4,7])
plot(college$Enroll, college$F.Undergrad)
plot(college$Enroll, college$F.Undergrad)
plot(college$F.Undergrad, college$Enroll)
pairs(Auto[,c(1,3:7)])
library(ISLR)
data(Auto)
attach(Auto)
str(Auto)
nrow(Auto)
ncol(Auto)
Auto <- na.omit(Auto)
nrow(Auto)
ncol(Auto)
colnames(Auto)
with(Auto,cylinders <- as.factor(cylinders))
pairs(Auto[,c(1,3:7)])
plot(displacement,horsepower)
knitr::opts_chunk$set(echo = TRUE)
pairs(college[,1:10])
plot(college$Accept, college$Enroll)
plot(college$F.Undergrad, college$Enroll)
table(Private, Elite)
par(mfrow = c(1,1))
plot(college$F.Undergrad, college$Enroll)
plot(college$Accept, college$F.Undergrad)
par(mfrow = c(2,1))
plot(college$F.Undergrad, college$Enroll)
plot(college$Accept, college$F.Undergrad)
par(mfrow = c(1,2))
plot(college$F.Undergrad, college$Enroll)
plot(college$Accept, college$F.Undergrad)
